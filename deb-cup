#!/bin/bash

#    Deb Cup: GUI tool for uploading packages to a PPA on launchpad.net.
#    Copyright (C) 2017  Pavel Řehák
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


#. $HOME/.config/deb-cup/deb-cup.cfg
config_file=$HOME/.config/deb-cup/config
path_config_file=$HOME/.config/deb-cup/path
log_file=$HOME/.config/deb-cup/log
icon=/usr/share/icons/hicolor/48x48/apps/deb-cup.png

# Needed for dch
VISUAL=gedit
export VISUAL


##############################################################################
# Gettext
##############################################################################

. gettext.sh

TEXTDOMAIN=deb-cup
export TEXTDOMAIN

TEXTDOMAINDIR=/usr/share/locale
export TEXTDOMAINDIR

title='Deb Cup'


##############################################################################
#	FUNCTIONS
##############################################################################

main_window()
{
action=$(zenity --list \
				--title="$title" \
				--window-icon=$icon \
				--width=250 \
				--height=330 \
				--hide-header \
				--text "" \
				--column "" \
				--column "" \
				--hide-column=1 \
				  settings "$(gettext 'Set user and ppa...')" \
				  path "$(gettext 'Set project folder...')" \
				  debian "$(gettext 'Create/Open debian folder')" \
				  tarball "$(gettext 'Create orig tarball')" \
				  changelog "$(gettext 'Increment changelog...')" \
				  binary "$(gettext 'Create deb binary')" \
				  sign "$(gettext 'Create signed dsc and changes')" \
				  upload "$(gettext 'Upload to a PPA...')" \
				  doc-help "$(gettext 'Help')")
}


#	SETTING
##############################################################################

settings_window()
{
if user_ppa=$(zenity --entry \
		--title="$title" \
		--window-icon=$icon \
		--text="$(gettext 'Set user name and name of your PPA in format: 
 user/ppa')" \
		--entry-text="$(cat $config_file)")
then
	echo $user_ppa > $config_file || create_config
fi
}

create_config()
{
mkdir  $HOME/.config/deb-cup
echo $user_ppa > $config_file
}


set_project_folder()
{
if path_project_folder=$(zenity --file-selection \
				--window-icon=$icon \
				--filename="$HOME/" \
				--title="$(gettext 'Choose a folder with the source code')" \
				--directory)
then
	check_project_name
	if [[ $project_version = *"-"[0-9]* ]]
	then
		echo $path_project_folder > $path_config_file || create_config_path
	else
		zenity --warning \
				--title="$title" \
				--window-icon=$icon \
				--text="$(gettext 'Set name and version of the folder in format name-version, e.g. myapp-0.1.0.')"
	fi
else
	:
fi
}

create_config_path()
{
mkdir  $HOME/.config/deb-cup
echo $path_project_folder > $path_config_file
}


create_cfg()
{
mkdir  $HOME/.config/deb-cup
echo "" > $config_file
}


#	ACTIONS
##############################################################################

create_debian_folder()
{
path_project_folder=$(cat $path_config_file)
check_project_name
if [[ $project_version = *"-"[0-9]* ]]
then
	cd $path_project_folder
	dh_make --yes --indep --createorig --native
	zenity --info \
			--window-icon=$icon \
			--title="$title" \
			--text="Edit debian folder manually."
	xdg-open $path_project_folder/debian/
else
	warning_set_project_folder
fi
}


create_orig_tarball()
{
path_project_folder=$(cat $path_config_file)
check_project_name
if [[ $project_version = *"-"[0-9]* ]]
then
	(
	echo "0"
	cd $path_parent_folder
	echo "5"
	tar -cf debian.tar $project_version/debian/
	echo "25"
	rm -fr $project_version/debian
	echo "45"
	tar -caf $project_name\_$version_number.orig.tar.xz $project_version
	echo "75"
	tar -xf debian.tar
	echo "90"
	rm debian.tar
	echo "100"
	) |	zenity --progress \
				--title="$title" \
				--window-icon=$icon \
				--auto-close \
				--text="$(gettext 'Creating orig tarball...')"
	notify-send "$(gettext 'Orig tarball created')" --icon=$icon --expire-time=3000
else
	warning_set_project_folder
fi
}


update_changelog()
{
path_project_folder=$(cat $path_config_file)
check_project_name
if [[ $project_version = *"-"[0-9]* ]]
then
	if ls $path_project_folder/debian/changelog
	then
		cd $path_project_folder/debian
		if dch --fromdirname --controlmaint
		then
			:
		else
			zenity --warning \
					--title="$title" \
					--window-icon=$icon \
					--text="$(gettext 'Changelog cannot be opened.
Probably the name of the project folder and the name of the project
in the changelog file are not the same. Debian folder will be opened...')"
			if path_changelog_file=$(zenity --file-selection \
					--window-icon=$icon \
					--filename="$path_project_folder/debian/" \
					--title="$title" \
					--file-filter="changelog | changelog")
			then
				gedit $path_changelog_file
			else
				:
			fi
		fi
	else
		warning_create_debian_folder
	fi
else
	warning_set_project_folder
fi
}


create_deb_binary()
{
path_project_folder=$(cat $path_config_file)
check_project_name
if [[ $project_version = *"-"[0-9]* ]]
then
	if ls $path_project_folder/debian/changelog
	then
		cd $path_parent_folder
		if ls $project_name\_$version_number.orig.tar.xz
		then
			# set correct name of deb from changelog
			cd $path_project_folder/debian
			dch --release --controlmaint
			cd $path_project_folder
			touch $log_file
			(
			echo "0"
			debuild -us -uc > $log_file
			echo "100"
			) |	zenity --progress \
					--title="$title" \
					--window-icon=$icon \
					--pulsate \
					--auto-close \
					--text="$(gettext 'Creating deb binary package...')"
			zenity --text-info \
					--window-icon=$icon \
					--title="$title" \
					--width=500 \
					--height=300 \
					--filename=$log_file
		else
			warning_create_orig_tarball
		fi
	else
		warning_create_debian_folder
	fi
else
	warning_set_project_folder
fi
}

sign_packages()
{
path_project_folder=$(cat $path_config_file)
check_project_name
if [[ $project_version = *"-"[0-9]* ]]
then
	if ls $path_project_folder/debian/changelog
	then
		if ls  $path_parent_folder/$project_name\_$version_number.orig.tar.xz
		then
			cd $path_project_folder/debian
			dch --release --controlmaint
			sec_key="$(eval gpg --list-secret-keys)"
			sec_key=$(echo "$sec_key" | sed -n '/sec /p' | sed 's/.*\/\(.*\) .*/\1/')
			cd $path_project_folder
			if zenity --question \
					--title="$title" \
					--window-icon=$icon \
				--text="$(gettext 'Do you want to include orig tarball?')" \
					--default-cancel
			then
				command="debuild -S -sa -k$sec_key"
				gnome-terminal -e "bash -c \"$command; exec bash\""
				#log="$(eval $command)"
				#touch $log_file
				#echo "$log" > $log_file
				#zenity --text-info \
				#		--window-icon=$icon \
				#		--title="$title" \
				#		--width=500 \
				#		--height=300 \
				#		--filename=$log_file
			else
				command="debuild -S -sd -k$sec_key"
				gnome-terminal -e "bash -c \"$command; exec bash\""
				#log="$(eval $command)"
				#touch $log_file
				#echo "$log" > $log_file
				#zenity --text-info \
				#		--window-icon=$icon \
				#		--title="$title" \
				#		--width=500 \
				#		--height=300 \
				#		--filename=$log_file
			fi
		else
			warning_create_orig_tarball
		fi
	else
		warning_create_debian_folder
	fi
else
	warning_set_project_folder
fi
}


upload_file()
{
user_ppa="$(cat $config_file)"
if [ "$user_ppa" = "" ]
then
	zenity --warning \
		--window-icon=$icon \
		--text="$(gettext 'Set user name and name of your PPA in Settings first.')" \
		--title="$title"
else
	if path_changes_file=$(zenity --file-selection \
					--window-icon=$icon \
					--filename="$path_parent_folder/" \
					--title="$(gettext 'Choose source.changes file')" \
					--file-filter="source.changes | *source.changes")
	then
		# Print the part of string after last "/"
		file_name=$(echo "${path_changes_file##*/}")
		if zenity --question \
					--title="$title" \
					--window-icon=$icon \
					--text="$(eval_gettext "Do you want to upload \$file_name to \$user_ppa?")" \
					--default-cancel
		then
			command_upload="dput ppa:$user_ppa $path_changes_file"
			log="$(eval $command_upload)"
			zenity --info \
					--window-icon=$icon \
					--text="$log" \
					--title="$title"
		else
			:
		fi
	else
		:
	fi
fi
}


open_help()
{
zenity --text-info \
		--window-icon=$icon \
		--title="$title" \
		--width=665 \
		--height=500 \
		--filename=/usr/share/doc/deb-cup/help

}

#	CHECK
##############################################################################

check_project_name()
{
path_parent_folder=$(echo "${path_project_folder%/*}")
project_version=$(echo "${path_project_folder##*/}")
project_name=$(echo "${project_version%-*}")
version_number=$(echo "${path_project_folder##*-}")
}


#	WARNINGS
##############################################################################

warning_set_project_folder()
{
zenity --warning \
		--title="$title" \
		--window-icon=$icon \
		--text="$(gettext 'Choose project folder first.')"
set_project_folder
}


warning_create_debian_folder()
{
zenity --warning \
		--title="$title" \
		--window-icon=$icon \
		--text="$(gettext 'Create debian folder first.')"
}


warning_create_orig_tarball()
{
zenity --warning \
		--window-icon=$icon \
		--text="$(gettext 'Create orig tarball first.')" \
		--title="$title"
}

##############################################################################
#	PROGRAM
##############################################################################

run=1
while [ "$run" = 1 ]
do

main_window

if [ $action = tarball ]
then
	create_orig_tarball

elif [ $action = changelog ]
then
	update_changelog

elif [ $action = binary ]
then
	create_deb_binary

elif [ $action = sign ]
then
	sign_packages

elif [ $action = upload ]
then
	upload_file

elif [ $action = debian ]
then
	create_debian_folder

elif [ $action = settings ]
then
	settings_window

elif [ $action = path ]
then
	set_project_folder

elif [ $action = doc-help ]
then
	open_help

else
	echo "" > $path_config_file
	run=0
fi

done

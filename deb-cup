#!/bin/bash

#    Deb Cup: GUI tool for uploading packages to a PPA on launchpad.net.
#    Copyright (C) 2017  Pavel Řehák
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# version 0.2.0
# depend on zenity

config_file=$HOME/.config/deb-cup/config
icon=/usr/share/icons/hicolor/48x48/apps/deb-cup.png


##############################################################################
# Gettext
##############################################################################

. gettext.sh

TEXTDOMAIN=deb-cup
export TEXTDOMAIN

TEXTDOMAINDIR=/usr/share/locale
export TEXTDOMAINDIR

title='Deb Cup'


##############################################################################
#	FUNCTIONS
##############################################################################

main_window()
{
action=$(zenity --list \
				--title="$title" \
				--window-icon=$icon \
				--height=250 \
				--hide-header \
				--text "" \
				--column "" \
				--column "" \
				--hide-column=1 \
				  settings "$(gettext 'Settings...')" \
				  tarball "$(gettext 'Create orig tarball...')" \
				  upload "$(gettext 'Upload...')" \
				  end "$(gettext 'Exit')")
}

settings_window()
{
if user_ppa=$(zenity --entry \
		--title="$title" \
		--window-icon=$icon \
		--text="$(gettext 'Set user name and name of your PPA in format: 
 user/ppa')" \
		--entry-text="$(cat $config_file)")
then
	echo $user_ppa > $config_file || create_config
fi
}

create_config()
{
mkdir  $HOME/.config/deb-cup
echo $user_ppa > $config_file
}

upload_file()
{
user_ppa="$(cat $config_file)"
if [ "$user_ppa" = "" ]
then
	zenity --warning \
		--window-icon=$icon \
		--text="$(gettext 'Set user name and name of your PPA in Settings first.')" \
		--title="$title"
else
	if path_file=$(zenity --file-selection \
					--window-icon=$icon \
					--filename="$HOME/" \
					--title="$title" \
					--file-filter="source.changes | *source.changes")
	then
		# Print the part of string after last "/"
		file_name=$(echo "${path_file##*/}")
		if zenity --question \
					--title="$title" \
					--window-icon=$icon \
					--text="$(eval_gettext "Do you want to upload \$file_name to \$user_ppa?")" \
					--default-cancel
		then
			command_upload="dput ppa:$user_ppa $path_file"
			log="$(eval $command_upload)"
			zenity --info \
					--window-icon=$icon \
					--text="$log" \
					--title="$title" \
		else
			:
		fi
	else
		:
	fi
fi
}


create_orig_tarball()
{
if path_project_folder=$(zenity --file-selection \
								--window-icon=$icon \
								--filename="$HOME/" \
								--title="$title" \
								--directory)
then
	path_parent_folder=$(echo "${path_project_folder%/*}")
	project_version=$(echo "${path_project_folder##*/}")
	project_name=$(echo "${project_version%-*}")
	version_number=$(echo "${path_project_folder##*-}")
	if [[ $project_version = *"-"[0-9]* ]]
	then
		if zenity --question \
					--title="$title" \
					--window-icon=$icon \
					--text="$(eval_gettext "Do you want to create \$project_name\_\$version_number.orig.tar.xz?")" \
					--default-cancel
		then
			cd $path_parent_folder
			tar -cf debian.tar $project_version/debian/
			rm -fr $project_version/debian
			tar -caf $project_name\_$version_number.orig.tar.xz $project_version
			tar -xf debian.tar
			rm debian.tar
		else
			:
		fi
	else
		zenity --warning \
				--title="$title" \
				--window-icon=$icon \
				--text="$(gettext 'Set name and version of the folder in format name-version, e.g. myapp-0.1.0.')"
	fi
else
	:
fi
}

##############################################################################
#	PROGRAM
##############################################################################

run=1
while [ "$run" = 1 ]
do

main_window

if [ $action = tarball ]
then
	create_orig_tarball
elif [ $action = upload ]
then
	upload_file
elif [ $action = settings ]
then
	settings_window
else
	run=0
fi

done
